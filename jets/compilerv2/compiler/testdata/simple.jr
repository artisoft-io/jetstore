# ///////////////////////////////////////////////////////////////////////////////////////
# Simple Rule Test for JetStore Rule Language
# ---------------------------------------------------------------------------------------
@JetCompilerDirective extract_resources_from_rules = "true";

volatile_resource medicareRateObj261     = "medicareRateObj261";
# =======================================================================================
# Defining Lookup Tables
# ---------------------------------------------------------------------------------------
lookup_table acme:ProcedureLookup {
  $csv_file = "/work/buckets/mylookup.csv",    # csv file location
  $key = ["EVENT_DURATION"],                   # Key columns, resource PROC_CODE automatically created
  $columns = [
    "EVENT_DURATION" as int,
    "PROC_RID" as long,
    "IS_FAC" as bool,
    "FROM_DATE" as date,
    "EXCL" as text
  ]
};

# State class used in rule engine working memory (abbreviated)
class jets:State {
  $base_classes = [owl:Thing],
  $data_properties = [
    jets:completed                  as bool,
    jets:currentSourcePeriod        as int, 
    jets:currentSourcePeriodDate    as date, 
    jets:exception                  as array of text,
    jets:range_value                as resource
  ],
  $as_table = false
};

resource node1 = "node1";
resource node2 = "node2";
triple(jets:iState, rdf:type, jets:State);

# The 2 rules below are the same as rule 4 and 5 in rete_session_test
[Rule5,s=10]:
  (?s node1 ?n1)
  ->
  (?s node2 ?n1)
;
