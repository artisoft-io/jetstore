# ///////////////////////////////////////////////////////////////////////////////////////
# Testing ReteMetaStoreFactory
# ---------------------------------------------------------------------------------------
# test 2: base capability test rule file
# =======================================================================================
# Defining Constants Resources and Literals
# ---------------------------------------------------------------------------------------
resource jet:Context = "jet:Context";
resource rdf:type = "rdf:type";
resource hc:Claim = "hc:Claim";
resource hc:BaseClaim = "hc:BaseClaim";

resource hc:raw_name = "hc:raw_name";
resource hc:full_name = "hc:full_name";
resource hc:first_name = "hc:first_name";
resource hc:last_name = "hc:last_name";
resource hc:code1 = "hc:code1";
resource hc:code2 = "hc:code2";
resource hc:code5 = "hc:code5";

# text first_name_rx = "/(\\w*)\\s*\\w*/gm";
# text last_name_rx = "/\\w*\\s*(\\w*)/gm";
resource first_name_rx = "first_name_rx";
resource last_name_rx = "last_name_rx";

[Rule1]:
  (?clm01 rdf:type hc:Claim)
  ->
  (?clm01 rdf:type hc:BaseClaim)
;

[Rule2]:
  (?clm01 rdf:type hc:Claim).
  (?clm01 rdf:type hc:BaseClaim).
  (?clm01 hc:code1 ?code1).
  (?clm01 hc:code2 ?code2).
  [(?code1 + ?code2) == int(5)].
  ->
  (?clm01 hc:code5 ?code1+?code2)
;

[Rule3]:
  (?ctx rdf:type jet:Context).
  (?clm01 rdf:type hc:Claim).
  (?clm01 rdf:type hc:BaseClaim).
  (?ctx first_name_rx ?fname_rx).
  (?ctx last_name_rx ?lname_rx).
  (?clm01 hc:raw_name ?name)
  ->
  (?clm01 hc:first_name ?fname_rx r? ?name).
  (?clm01 hc:last_name ?lname_rx r? ?name)
;

[Rule4]:
  (?clm01 rdf:type hc:Claim).
  (?clm01 rdf:type hc:BaseClaim).
  (?clm01 hc:first_name ?first).
  (?clm01 hc:last_name ?last)
  ->
  (?clm01 hc:full_name ((?first + " ") + ?last))
;

resource node1 = "node1";
resource node2 = "node2";
resource node3 = "node3";

# The 2 rules below are the same as rule 4 and 5 in rete_session_test
[Rule5,s=10]:
  (?s node1 ?n1)
  ->
  (?s node2 ?n1)
;

[Rule6,s=20]:
  (?s node1 ?n1).
  not(?s node2 ?n1)
  ->
  (?s node3 ?n1)
;

resource node10 = "node10";
resource node20 = "node20";
resource node30 = "node30";

# The 2 rules below are the same as rule 6 and 7 in rete_session_test
[Rule7,s=10]:
  (?s node10 ?n1).
  (?s node2 ?n1)
  ->
  (?s node20 ?n1)
;

[Rule8,s=5]:
  (?s node10 ?n1).
  (?s node2 ?n1).
  not(?s node20 ?n1).
  (?s node1 ?n1).
  ->
  (?s node30 ?n1)
;
