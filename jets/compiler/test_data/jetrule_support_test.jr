# ///////////////////////////////////////////////////////////////////////////////////////
# Testing JetRule Grammar
# ---------------------------------------------------------------------------------------

# =======================================================================================
# Defining Constants Resources and Literals
# ---------------------------------------------------------------------------------------
# The JetRule language now have true and false already defined as boolean, adding here
# for illustration:
int isTrue = 1;
int isFalse = 0;

# Defining some constants (e.g. Exclusion Types)
# ---------------------------------------------------------------------------------------
text NOT_IN_CONTRACT      = "NOT COVERED IN CONTRACT";
text EXCLUDED_STATE       = "STATE";
text HH_AUTH              = "HH_AUTH";
text EXCL_HH_AUTH         = "HH AUTH";
text EXCLUDED_COUNTY      = "COUNTY";
text EXCLUDED_TIN         = "TIN";
text EXCLUDED_TIN_STATE   = "TIN/STATE";
text EXCL_MER_COM         = "MERGED COMPONENTS";
text EXCL_AMT_PAID        = "MERGED \"MARKET\" CHARGE BACK";
text EXCLUDED_GROUPID     = "GROUPID";
text EXCLUDED_MODALITY    = "MODALITY";

# Defining volatile resources (aka Local Resources)
# ---------------------------------------------------------------------------------------
resource medicareRateObjTC1 = "_0:medicareRateObjTC1";  # Support RC legacy
resource medicareRateObjTC2 = "_0:medicareRateObjTC2";  # Support RC legacy

resource None  = null;
resource uuid  = create_uuid_resource();
resource related_to  = "related_to";
resource has_code  = "has_code";
resource rdf:type  = "rdf:type";
resource acme:Claim  = "acme:Claim";
resource acme:SpecialClaim  = "acme:SpecialClaim";

# Some special cases
resource acme:key = "acme:key";
resource acme:"lookup_table" = "acme:key";

# Preferred way to define volative resources
# ---------------------------------------------------------------------------------------
volatile_resource medicareRateObj261     = "medicareRateObj261";
volatile_resource medicareRateObj262     = "medicareRateObj262";


# =======================================================================================
# Defining Lookup Tables
# ---------------------------------------------------------------------------------------
# lookup example based on ACME: *include-lookup* "CM/Procedure CM.trd"
# Note: Legacy trd lookup table will have to be converted to csv
# Assuming here the csv would have these columns: "PROC_CODE, PROC_RID, PROC_MID, PROC_DESC"
lookup_table acme:ProcedureLookup {
  $table_name = usi__cm_proc_codes,       # Table name where the data reside (loaded from trd file)
  $key = ["PROC_CODE"],                   # Key columns, resource PROC_CODE automatically created

  # Value columns, corresponding resource automatically created
  $columns = ["PROC_RID", "PROC_MID", "PROC_DESC"]
};

# Another example that is already using a csv file 
# based on ACME: *include-lookup* "MSK/MSK_DRG_TRIGGER.lookup"
lookup_table MSK_DRG_TRIGGER {
  $table_name = usi__msk_trigger_drg_codes,         # main table
  $key = ["DRG"],                                   # Lookup key

  # Value columns, corresponding resource automatically created
  # Data type based on columns type
  $columns = ["MSK_AREA_DRG_TRIGGER_ONLY", "MSK_TAG", "TRIGGER_TAG_DRG_ONLY", "DRG", "OVERLAP", "USE_ANESTHESIA"]
};


# =======================================================================================
# Defining Jet Rules
# ---------------------------------------------------------------------------------------
# property s: salience, o: optimization, tag: label
# optimization is true by default
[Rule1, s=+100, o=false, tag="ACME"]: 
  (?clm01 rdf:type acme:Claim).
  (?clm01 has_code ?code).
  (?clm02 rdf:type acme:Claim).
  (?clm02 has_code ?code)
  ->
  (?clm01 related_to ?clm02).
  (?clm02 related_to ?clm01)
;
