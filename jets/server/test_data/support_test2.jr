# ///////////////////////////////////////////////////////////////////////////////////////
# Unit Test JetStore server process
# ---------------------------------------------------------------------------------------

# =======================================================================================
# Base configuration for JetStore
# ---------------------------------------------------------------------------------------
jetstore_config {
  $max_rule_exec = 100000
};

# =======================================================================================
# Data Model
# ---------------------------------------------------------------------------------------
class jets:Entity {
  $base_classes = [owl:Thing],
  $data_properties = [
    jets:key as text,
    rdf:type as array of text
  ],
  $as_table = false
};

class jets:State {
  $base_classes = [owl:Thing],
  $data_properties = [
    jets:completed as text,
    jets:loop as array of int
  ],
  $as_table = false
};

class jets:Row {
  $base_classes = [owl:Thing],
  $data_properties = [
    jets:entity_property as text,
    jets:value_property as text,
    jets:lookup_multi_rows as array of text,
    jets:lookup_row as text
  ],
  $as_table = false
};

class aspec:Simulator {
  $base_classes = [owl:Thing],
  $data_properties = [
    aspec:anchor_date as date,
    aspec:nbr_entities as int,
    aspec:entity_key_prefix as text,
    aspec:entity_persona_lk as text
  ],
  $as_table = false
};

class asim:Entity {
  $base_classes = [owl:Thing],
  $data_properties = [
    asim:persona_key as text,
    asim:demographic_group_key as text,
    asim:event_group1_lk as text,
    asim:description as text
  ],
  $as_table = false
};

class asim:Event {
  $base_classes = [owl:Thing],
  $data_properties = [
    asim:event_key as text,
    asim:event_type as text,
    asim:event_rdf_type as text,
    asim:provider_group_lk as text,
    asim:service_date_offset as int,
    asim:service_date_max_days as int
  ],
  $as_table = false
};

class hc:Patient {
  $base_classes = [jets:Entity],
  $data_properties = [
    hc:patient_number as text,
    hc:dob as date,
    hc:gender as text
  ],
  $as_table = true
};

class hc:SimulatedPatient {
  $base_classes = [
    jets:Entity,
    asim:Entity,
    hc:Patient
  ],
  $as_table = true
};

class hc:Claim {
  $base_classes = [jets:Entity],
  $data_properties = [
    hc:member_number as text,
    hc:claim_number as text,
    hc:npi as text,
    hc:dos as date
  ],
  $as_table = true
};

class hc:SimulatedClaim {
  $base_classes = [
    jets:Entity,
    asim:Event,
    hc:Claim
  ],
  $as_table = true
};

# =======================================================================================
# Lookup Tables
# ---------------------------------------------------------------------------------------
# Patient Generation Lookup
# ---------------------------------------------------------------------------------------
# csv file have these columns: "key,asim:persona_key,asim:demographic_group_key,asim:event_group1_lk,asim:description"
lookup_table lk:BasePatientPersona {
  $csv_file = "base_patient_persona_test2.csv",    # csv file location
  $key = ["key"], 
  $columns = [
    "asim:persona_key" as text,
    "asim:demographic_group_key" as text,
    "asim:event_group1_lk" as text,
    "asim:description" as text
  ]
};
# ---------------------------------------------------------------------------------------
# Claim Generation Lookup
# ---------------------------------------------------------------------------------------
# csv file have these columns: "key,asim:event_key,asim:event_type,asim:event_rdf_type,asim:provider_group_lk,asim:service_date_offset,asim:service_date_max_days"
lookup_table lk:LowRiskEventGroup {
  $csv_file = "low_risk_group_test2.csv",    # csv file location
  $key = ["key"], 
  $columns = [
    "asim:event_key" as text,
    "asim:event_type" as text,
    "asim:event_rdf_type" as resource,
    "asim:provider_group_lk" as text,
    "asim:service_date_offset" as int,
    "asim:service_date_max_days" as int
  ]
};
