FROM jetstore_builder:go-bullseye as builder

FROM jetstore_base:bullseye

# Fix DL4006
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ARG JETS_VERSION

ENV JETS_VERSION=${JETS_VERSION}
RUN echo "----------------jetserver-------------------------" >> /VERSION.txt && \
    echo "JETS_VERSION: ${JETS_VERSION}"                      >> /VERSION.txt && \
    echo "BASE: ${BASE_CONTAINER}=${BASE_VERSION}"            >> /VERSION.txt && \
    echo "----------------*********************-------------" >> /VERSION.txt

USER root

# Copy libraries and apps from builder
ENV JETS_BUILD_DIR /usr/local/go/build
ENV JETS_BIN_DIR /usr/local/go/bin
ENV JETS_PY_BUILD_DIR /usr/local/go/src/jetstore/build
COPY --from=builder ${JETS_PY_BUILD_DIR}/lib /usr/local/lib
COPY --from=builder ${JETS_BUILD_DIR}/jets/jets_test /usr/local/bin/
COPY --from=builder ${JETS_BUILD_DIR}/jets/test_data /usr/local/bin/test_data
COPY --from=builder ${JETS_BUILD_DIR}/jets/libjets.so /usr/local/lib/
COPY --from=builder /usr/local/lib/libsqlite3.so.0.8.6 /usr/local/lib/
COPY --from=builder /usr/local/lib/libglog.so.0.6.0 /usr/local/lib/
# Go commands
COPY --from=builder ${JETS_BIN_DIR}/loader /usr/local/bin/
COPY --from=builder ${JETS_BIN_DIR}/server /usr/local/bin/
COPY --from=builder ${JETS_BIN_DIR}/update_db /usr/local/bin/


RUN \
    cd /usr/local/lib/ \
    && ldconfig \
    && echo "USR LOCAL LIB DIRECTORY Contains" \
    && ls -la \
    && ldd libjets.so \
    && cd / 


ARG USER_ID="1000"
ARG GROUP_ID="1000"
RUN groupadd -g ${GROUP_ID} jsuser \
    && useradd -r -u ${USER_ID} -g jsuser jsuser

ENV PYTHONPATH "$PYTHONPATH:/go/lib:/usr/local/lib"
ENV CLASSPATH ".:/usr/local/lib/antlr-${ANTLR4_VERSION}-complete.jar:$CLASSPATH"

# put the argo scripts in /go/lib ?

ENV WORKSPACES_HOME /go/workspaces
ENV WORK_HOME /go/work
RUN \
  mkdir -p ${WORKSPACES_HOME}           \
  && mkdir -p ${WORK_HOME}/output       \
  && mkdir -p ${WORK_HOME}/input        \ 
  && mkdir -p ${WORK_HOME}/metrics      \
  && mkdir -p ${WORK_HOME}/sm           \
  && mkdir -p ${WORK_HOME}/output_params 

RUN chown -Rc jsuser /go

# # Copy source and define the target (APP_HOME) where we will put the compiled artifacts
# ENV JETS_SOURCE_DIR /home/michel/projects/repos/jetstore
# # Need to define the main app home?
# ENV APP_HOME $JETS_SOURCE_DIR/build
# # Do we still need app_home_scripts for workflow python scripts??
# # Also may need to add subdirectory to last path elm: $JETS_SOURCE_DIR/build/jetserver ?
# ENV PATH "$PATH:$JETS_SOURCE_DIR/app_home_scripts:$APP_HOME:$JETS_SOURCE_DIR/build"
# ENV PYTHONPATH "$PYTHONPATH:$APP_HOME/lib"
# ENV CLASSPATH=".:/usr/local/lib/antlr-${ANTLR4_VERSION}-complete.jar:$CLASSPATH"
# # May need subdirectory where libraries are...
# ENV LD_LIBRARY_PATH "$LD_LIBRARY_PATH:$JETS_SOURCE_DIR/build/jets"
# ENV WORKSPACES_HOME /workspaces
# ENV WORK_HOME /go
# ENV PRE_PROCESS_SCRIPT group_by.py
# ENV INSIGHT_SERVER_SCRIPT $JETS_SOURCE_DIR/build/insight_server/insight_server
# ENV JETSERVER_SCRIPT $APP_HOME/jetserver

# RUN mkdir -p /home/jsuser && chown jsuser /home/jsuser
# RUN mkdir -p ${JETS_SOURCE_DIR} &&  ln -s ${JETS_SOURCE_DIR} jetstore && chown jsuser ${JETS_SOURCE_DIR}
# RUN mkdir -p ${WORKSPACES_HOME} && chown jsuser ${WORKSPACES_HOME}
# RUN mkdir -p ${WORK_HOME}/work && chown jsuser ${WORK_HOME}/work

ENTRYPOINT ["python3"]
WORKDIR ${WORK_HOME}
