# This workflow will build and push a the jetstore container image to Amazon ECR,
#

name: JetStore Image Build and Push to ECR


on: 
  workflow_dispatch:

# on:
#  push:
#    branches:
#      - main

env:
  AWS_REGION: us-east-1
  ECR_BASE_REPOSITORY: jetstore_base
  ECR_BUILDER_BASE_REPOSITORY: jetstore_base_builder
  ECR_REPOSITORY: jetstore

jobs:
  deploy:
    name: JetStore Image Build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set the JetStore tag and version
      id: set-tag-version
      run: |
        branch=${GITHUB_REF##*/}
        sha=${GITHUB_SHA::8}
        ts=$(date +%s)
        echo "IMAGE_TAG=${branch}-${sha}-${ts}" >> $GITHUB_ENV
        echo "JETS_GIT_SHA=${branch}-${sha}" >> $GITHUB_ENV
        echo "JETS_VERSION=${ts}" >> $GITHUB_ENV

    - name: Build, tag, and push image to Amazon ECR
      id: build-push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        BASE_IMAGE_TAG: bullseye
        BASE_BUILDER_IMAGE_TAG: go-bullseye
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        JETS_GIT_SHA: ${{ env.JETS_GIT_SHA }}
        JETS_VERSION: ${{ env.JETS_VERSION }}
      run: |
        # Pull & retag latest jetstore base image
        docker pull $ECR_REGISTRY/$ECR_BASE_REPOSITORY:$BASE_IMAGE_TAG
        docker image tag $ECR_REGISTRY/$ECR_BASE_REPOSITORY:$BASE_IMAGE_TAG jetstore_base:bullseye
        # Pull & retag latest jetstore builder base image
        docker pull $ECR_REGISTRY/$ECR_BUILDER_BASE_REPOSITORY:$BASE_BUILDER_IMAGE_TAG
        docker image tag $ECR_REGISTRY/$ECR_BUILDER_BASE_REPOSITORY:$BASE_BUILDER_IMAGE_TAG jetstore_base_builder:go-bullseye
        # Build the builder image (where we actually make the jetstore build)
        docker build  -t jetstore_builder:go-bullseye -f Dockerfile.go_bullseye .
        # Build the runtime (rt) image
        echo "JETS_VERSION is $JETS_VERSION" # This will output the version
        echo "IMAGE_TAG is $IMAGE_TAG" # This will output the image tag
        echo "JETS_GIT_SHA is $JETS_GIT_SHA" # This will output the git sha with branch name
        docker build --build-arg "JETS_VERSION=$JETS_VERSION" --build-arg "JETS_GIT_SHA=${JETS_GIT_SHA}" --tag "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" --tag jetstore:bullseye -f Dockerfile.rt_bullseye .
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "JETS_VERSION is $JETS_VERSION" # This will output the version
        echo "IMAGE_TAG is $IMAGE_TAG" # This will output the image tag
        echo "JETS_GIT_SHA is $JETS_GIT_SHA" # This will output the git sha with branch name
